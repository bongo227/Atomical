enum class TokenType {
    TOKEN_ILLEGAL,
    TOKEN_IDENT,
	
	// values
    BOOL_TRUE,
    BOOL_FALSE,

	// literals
    LITERAL_INT,
    LITERAL_FLOAT,
    LITERAL_HEX,
    LITERAL_OCTAL,
    LITERAL_STRING,

	// key words
    KEY_WORD_BREAK,
    KEY_WORD_CASE,
    KEY_WORD_CONST,
    KEY_WORD_CONTINUE,
    KEY_WORD_DEFAULT,
    KEY_WORD_DEFER,
    KEY_WORD_ELSE,
    KEY_WORD_FALLTHROUGH,
    KEY_WORD_FOR,
    KEY_WORD_FUNC,
    KEY_WORD_PROC,
    KEY_WORD_IF,
    KEY_WORD_IMPORT,
    KEY_WORD_RETURN,
    KEY_WORD_SELECT,
    KEY_WORD_STRUCT,
    KEY_WORD_SWITCH,
    KEY_WORD_TYPE,
    KEY_WORD_VAR,

	// symbols
    SYMBOL_SEMI,
    SYMBOL_COLON,
    SYMBOL_DEFINE,
    SYMBOL_DOUBLE_COLON,
    SYMBOL_ELLIPSE,
    SYMBOL_PERIOD,
    SYMBOL_COMMA,
    SYMBOL_LPAREN,
    SYMBOL_RPAREN,
    SYMBOL_LBRACK,
    SYMBOL_RBRACK,
    SYMBOL_LBRACE,
    SYMBOL_RBRACE,
    SYMBOL_ADD,
    SYMBOL_ADD_ASSIGN,
    SYMBOL_INC,
    SYMBOL_ARROW,
    SYMBOL_SUB,
    SYMBOL_SUB_ASSIGN,
    SYMBOL_DEC,
    SYMBOL_MUL,
    SYMBOL_MUL_ASSIGN,
    SYMBOL_QUO,
    SYMBOL_QUO_ASSIGN,
    SYMBOL_REM,
    SYMBOL_REM_ASSIGN,
    SYMBOL_XOR,
    SYMBOL_XOR_ASSIGN,
    SYMBOL_LSS,
    SYMBOL_LEQ,
    SYMBOL_SHL,
    SYMBOL_SHL_ASSIGN,
    SYMBOL_GTR,
    SYMBOL_GEQ,
    SYMBOL_SHR,
    SYMBOL_SHR_ASSIGN,
    SYMBOL_ASSIGN,
    SYMBOL_EQL,
    SYMBOL_NOT,
    SYMBOL_NEQ,
    SYMBOL_AND_NOT,
    SYMBOL_AND_NOT_ASSIGN,
    SYMBOL_AND,
    SYMBOL_AND_ASSIGN,
    SYMBOL_LAND,
    SYMBOL_OR,
    SYMBOL_OR_ASSIGN,
    SYMBOL_LOR,
	
	// eof token
    TOKEN_END,
};

struct Token {
    enum TokenType type;
    int line;
    int column;
    std::string value;

    public:
        int get_binding_power();
};